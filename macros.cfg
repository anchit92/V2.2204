
#####################################################################
#	Macros
#####################################################################
[gcode_macro _USER_VARIABLE]
description: Helper: Contains User defined printer variables
variable_disable_turnoff: 0
gcode:

[gcode_macro _PRIME_NOZZLE]
description: Lay down a 150mm prime line on the right edge of the bed
gcode:
  G92 E0
  G0 X345 Y325 Z0.4 F9000
  G0 Y160 E20 F600
  #G0 E-0.8 F1800 ; retract a bit so we don't mess up the bed during the first move
  G92 E0

[gcode_macro M0]
gcode:
  PAUSE
[gcode_macro G32]
gcode:
   status_homing
   G28
   #clean_nozzle
   status_leveling
   clean_nozzle
   QUAD_GANTRY_LEVEL
   
[gcode_macro PRINT_START]
gcode:
  status_heating
  {% set EXT_TEMP = params.EXTRUDER|default(220)|int %}
  {% set BED_TEMP = params.BED|default(60)|int %}
  M104 S150
  M140 S{BED_TEMP}
  M106 S255
  M109 S150
  M190 S{BED_TEMP}
  M107
  G32                            ; home all axes
  G28 Z
  BED_MESH_CALIBRATE
  CALIBRATE_Z
  M104 S{EXT_TEMP}
  M109 S{EXT_TEMP}
  G1 Z20 F3000                   ; move nozzle away from bed 
  BED_MESH_PROFILE LOAD=default
  status_printing
  LINE_PURGE
  ;_PRIME_NOZZLE

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-25.0 F3600                 ; retract filament
    G91                            ; relative positioning
    G0 Z1.00 X5.0 Y5.0 F20000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X325 Y325 F3600            ; park nozzle at rear
    status_ready
    
[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  G28 X Y
  CANCEL_PRINT_BASE

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(50)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 


[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

  #unretract_speed: 60


[pause_resume]
recover_velocity: 300.0

[gcode_macro SET_RETRACTIONLENGTH]
gcode:
  SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
  GET_RETRACTION

